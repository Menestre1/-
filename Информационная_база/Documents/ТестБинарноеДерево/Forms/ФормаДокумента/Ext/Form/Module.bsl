#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если документ новый и респондент не заполнен, подставляем текущего пользователя
	Если Объект.Ссылка.Пустая() И НЕ ЗначениеЗаполнено(Объект.Респондент) Тогда
		Объект.Респондент = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	// Создаем реквизиты и сам интерфейс один раз при создании формы
	СоздатьРеквизитыФормыНаСервере();
	СоздатьИнтерфейсТестирования();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// *** КЛЮЧЕВОЕ ИСПРАВЛЕНИЕ ***
	// После того как сервер отработал, на клиенте мы просто
	// просим форму полностью обновить свое представление на основе данных объекта.
	// Это заставит ее "увидеть" значение в Объект.Опрос и отобразить его.
	ОбновитьИнтерфейс();
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Принудительно обновляем интерфейс после записи,
	// так как могли измениться ключевые поля (например, ШаблонТеста)
	ОбновитьСостояниеИнтерфейсаНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Обновляем состояние на клиенте, чтобы изменения были видны сразу
	ОбновитьСостояниеИнтерфейсаНаКлиенте();
КонецПроцедуры

#КонецОбласти


#Область ДинамическоеСозданиеИнтерфейса

&НаСервере
Процедура СоздатьРеквизитыФормыНаСервере()
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ТекстТекущегоВопроса", Новый ОписаниеТипов("ФорматированныйДокумент"));
	СтруктураРеквизитов.Вставить("ИсторияОтветов", Новый ОписаниеТипов("ФорматированныйДокумент"));
	ДФИ.СоздатьРеквизиты(ЭтотОбъект, СтруктураРеквизитов);
КонецПроцедуры

&НаСервере
Процедура СоздатьИнтерфейсТестирования()
	
	// --- Группа 1: Основная информация (статичная) ---
	ГруппаОсновная = ДФИ.СздГруппаОбычная(ЭтотОбъект, "ГруппаОсновная", ЭтотОбъект, "Основные данные");
	ГруппаОсновная.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ДФИ.СздПоле(ЭтотОбъект, "Номер", ГруппаОсновная, "Номер:", 1, "Объект.Номер");
	ДФИ.СздПоле(ЭтотОбъект, "Дата", ГруппаОсновная, "Дата:", 1, "Объект.Дата");
	
	// *** КЛЮЧЕВОЕ ИСПРАВЛЕНИЕ ***
	// Создаем поле и СРАЗУ делаем его недоступным. Не нужно никаких сложных схем.
	//ПолеОпрос = ДФИ.СздПоле(ЭтотОбъект, "Опрос", ГруппаОсновная, "Назначение:", 1, "Объект.Опрос");
	//ПолеОпрос.ТолькоПросмотр = Истина;
	//
	//ДФИ.СздПоле(ЭтотОбъект, "ШаблонТеста", ГруппаОсновная, "Шаблон:", 1, "Объект.ШаблонТеста");
	ДФИ.СздПоле(ЭтотОбъект, "Респондент", ГруппаОсновная, "Респондент:", 1, "Объект.Респондент");

	// --- Группа 2: Начало теста (одна кнопка) ---
	ГруппаНачало = ДФИ.СздГруппаОбычнаяБезОтображения(ЭтотОбъект, "ГруппаНачалоТеста", ЭтотОбъект);
	ДФИ.СоздатьКоманду(ЭтотОбъект, "НачатьТестирование", "Начать тестирование", "НачатьТестирование");
	ДФИ.СздКнопка(ЭтотОбъект, "КнопкаНачать", ГруппаНачало, "Начать тестирование", "НачатьТестирование");

	// --- Группа 3: Прохождение теста (вопрос и кнопки Да/Нет) ---
	ГруппаПрохождение = ДФИ.СздГруппаОбычная(ЭтотОбъект, "ГруппаПрохождениеТеста", ЭтотОбъект, "Вопрос:");
	
	ПолеВопроса = ДФИ.СздПоле(ЭтотОбъект, "ПолеТекущегоВопроса", ГруппаПрохождение, "", 1, "ТекстТекущегоВопроса");
	ПолеВопроса.Вид = ВидПоляФормы.ПолеФорматированногоДокумента;
	ПолеВопроса.РастягиватьПоВертикали = Истина;
	ПолеВопроса.Высота = 5;
	ПолеВопроса.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	ГруппаКнопок = ДФИ.СздГруппаОбычнаяБезОтображения(ЭтотОбъект, "ГруппаКнопокОтвета", ГруппаПрохождение);
	ГруппаКнопок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	ДФИ.СоздатьКоманду(ЭтотОбъект, "ОтветитьДа", "    Да    ", "ОтветитьДа");
	ДФИ.СоздатьКоманду(ЭтотОбъект, "ОтветитьНет", "    Нет    ", "ОтветитьНет");
	ДФИ.СздКнопка(ЭтотОбъект, "КнопкаДа", ГруппаКнопок, "    Да    ", "ОтветитьДа");
	ДФИ.СздКнопка(ЭтотОбъект, "КнопкаНет", ГруппаКнопок, "    Нет    ", "ОтветитьНет");

	// --- Группа 4: История ответов ---
	ГруппаИстория = ДФИ.СздГруппаОбычная(ЭтотОбъект, "ГруппаИстория", ЭтотОбъект, "История ответов");
	ПолеИстория = ДФИ.СздПоле(ЭтотОбъект, "ПолеИсторияОтветов", ГруппаИстория, "", 1, "ИсторияОтветов");
	ПолеИстория.Вид = ВидПоляФормы.ПолеФорматированногоДокумента;
	ПолеИстория.РастягиватьПоВертикали = Истина;
	ПолеИстория.Высота = 10;
	ПолеИстория.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	// --- Группа 5: Результаты теста ---
	ГруппаРезультаты = ДФИ.СздГруппаОбычная(ЭтотОбъект, "ГруппаРезультатыТеста", ЭтотОбъект, "Результаты тестирования");
	ДФИ.СздПоле(ЭтотОбъект, "РезультатСдачи", ГруппаРезультаты, "Результат:", 1, "Объект.РезультатСдачи").ТолькоПросмотр = Истина;
	ДФИ.СздПоле(ЭтотОбъект, "ОбщееВремя", ГруппаРезультаты, "Затрачено времени (сек):", 1, "Объект.ОбщееВремяПрохождения").ТолькоПросмотр = Истина;

	// Обновляем видимость созданных элементов
	ОбновитьСостояниеИнтерфейсаНаСервере();
	
КонецПроцедуры

#КонецОбласти


#Область КомандыФормы

&НаКлиенте
Процедура НачатьТестирование(Команда)
	НачатьТестированиеНаСервере();
	ОбновитьСостояниеИнтерфейсаНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьДа(Команда)
	ОбработатьОтветНаСервере("Да");
	ОбновитьСостояниеИнтерфейсаНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНет(Команда)
	ОбработатьОтветНаСервере("Нет");
	ОбновитьСостояниеИнтерфейсаНаКлиенте();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеИнтерфейсаНаКлиенте()
	// Просим сервер обновить состояние
	ОбновитьСостояниеИнтерфейсаНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОбновитьСостояниеИнтерфейсаНаСервере()
	
	ТестУжеЗавершен = Объект.Завершен;
	ТестНачат = ЗначениеЗаполнено(Объект.ВремяНачалаТеста);
	
	Элементы.ГруппаПрохождениеТеста.Видимость = ТестНачат И НЕ ТестУжеЗавершен;
	Элементы.ГруппаРезультатыТеста.Видимость = ТестУжеЗавершен;
	Элементы.ГруппаНачалоТеста.Видимость = НЕ ТестНачат И НЕ ТестУжеЗавершен;
	Элементы.ГруппаИстория.Видимость = ТестНачат;
	
	//Элементы.ШаблонТеста.ТолькоПросмотр = ТестНачат;
	Элементы.Респондент.ТолькоПросмотр = ТестНачат;
	
	Если ТестНачат Тогда
		Если НЕ ТестУжеЗавершен И ЗначениеЗаполнено(Объект.ТекущийУзелДерева) Тогда
			УзелОбъект = Объект.ТекущийУзелДерева.ПолучитьОбъект();
			Если НЕ УзелОбъект.ЯвляетсяЛистом И ЗначениеЗаполнено(УзелОбъект.Вопрос) Тогда
				ФД_Вопрос = Новый ФорматированныйДокумент;
				ФД_Вопрос.УстановитьHTML(УзелОбъект.Вопрос.ТекстФормулировки, Новый Структура());
				ЭтотОбъект.ТекстТекущегоВопроса = ФД_Вопрос;
			КонецЕсли;
		ИначеЕсли ТестУжеЗавершен И ЗначениеЗаполнено(Объект.ТекущийУзелДерева) Тогда
			ФД_Вопрос = Новый ФорматированныйДокумент;
			ФД_Вопрос.УстановитьHTML("Тест завершен. Итоговый результат: <b>" + Объект.ТекущийУзелДерева.Наименование + "</b>", Новый Структура());
			ЭтотОбъект.ТекстТекущегоВопроса = ФД_Вопрос;
		КонецЕсли;
		
		ОбновитьИсториюОтветовНаСервере();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура НачатьТестированиеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Структура.СледующийУзелДерева
	|ИЗ
	|	РегистрСведений.СтруктураБинарногоДерева КАК Структура
	|ГДЕ
	|	Структура.ШаблонТеста = &Шаблон
	|	И Структура.РодительскийУзел = ЗНАЧЕНИЕ(Справочник.УзлыБинарногоДерева.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Шаблон", Объект.ШаблонТеста);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Сообщить("Для данного шаблона не найдена структура дерева или корневой узел!");
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Объект.ТекущийУзелДерева = Выборка.СледующийУзелДерева;
	Объект.ВремяНачалаТеста = ТекущаяДата();
	Объект.Завершен = Ложь;
	Объект.ОтветыБинарногоДерева.Очистить();
	
КонецПроцедуры


&НаСервере
Процедура ОбработатьОтветНаСервере(ОтветСтрокой)
	
	ТипОтвета = Неопределено;
	Если ОтветСтрокой = "Да" Тогда
		ТипОтвета = Перечисления.ТипыОтветовБинарногоДерева.Да;
	ИначеЕсли ОтветСтрокой = "Нет" Тогда
		ТипОтвета = Перечисления.ТипыОтветовБинарногоДерева.Нет;
	КонецЕсли;
	
	ПредыдущийУзел = Объект.ТекущийУзелДерева;
	НоваяСтрока = Объект.ОтветыБинарногоДерева.Добавить();
	НоваяСтрока.УзелДерева = ПредыдущийУзел;
	НоваяСтрока.Вопрос = ПредыдущийУзел.ПолучитьОбъект().Вопрос;
	НоваяСтрока.ТипОтветаБинарный = ТипОтвета;
	НоваяСтрока.НомерШага = Объект.ОтветыБинарногоДерева.Количество();

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Структура.СледующийУзелДерева,
	|	Структура.СледующийУзелДерева.ЯвляетсяЛистом КАК СледующийУзелЭтоЛист
	|ИЗ
	|	РегистрСведений.СтруктураБинарногоДерева КАК Структура
	|ГДЕ
	|	Структура.ШаблонТеста = &Шаблон
	|	И Структура.РодительскийУзел = &ТекущийУзел
	|	И Структура.ТипОтвета = &ТипОтвета";
	
	Запрос.УстановитьПараметр("Шаблон", Объект.ШаблонТеста);
	Запрос.УстановитьПараметр("ТекущийУзел", Объект.ТекущийУзелДерева);
	Запрос.УстановитьПараметр("ТипОтвета", ТипОтвета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Объект.ТекущийУзелДерева = Выборка.СледующийУзелДерева;
		Если Выборка.СледующийУзелЭтоЛист Тогда
			ЗавершитьТестированиеНаСервере();
		КонецЕсли;
	Иначе
		Сообщить("Структура дерева неполная. Тест завершен на текущем узле.");
		ЗавершитьТестированиеНаСервере();
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗавершитьТестированиеНаСервере()
	
	Объект.Завершен = Истина;
	Объект.ВремяЗавершения = ТекущаяДата();
	
	Если ЗначениеЗаполнено(Объект.ВремяНачалаТеста) Тогда
		Объект.ОбщееВремяПрохождения = (Объект.ВремяЗавершения - Объект.ВремяНачалаТеста);
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ОбновитьИсториюОтветовНаСервере()
	
	ТекстHTML = "<div style='font-family: sans-serif; font-size: 14px;'>";
	
	Для Каждого СтрокаОтвета Из Объект.ОтветыБинарногоДерева Цикл
		
		ТекстВопроса = СтрокаОтвета.Вопрос.ТекстФормулировки;
		
		ОтветПользователя = "";
		Если СтрокаОтвета.ТипОтветаБинарный = Перечисления.ТипыОтветовБинарногоДерева.Да Тогда
			ОтветПользователя = "<b style='color:green;'>Да</b>";
		ИначеЕсли СтрокаОтвета.ТипОтветаБинарный = Перечисления.ТипыОтветовБинарногоДерева.Нет Тогда
			ОтветПользователя = "<b style='color:red;'>Нет</b>";
		КонецЕсли;
		
		ТекстHTML = ТекстHTML + "<b>" + Строка(СтрокаОтвета.НомерШага) + ". " + ТекстВопроса + "</b><br>";
		ТекстHTML = ТекстHTML + "<span style='padding-left: 20px;'>Ваш ответ: " + ОтветПользователя + "</span><br><br>";
		
	КонецЦикла;
	
	Если Объект.Завершен И ЗначениеЗаполнено(Объект.ТекущийУзелДерева) Тогда
		ТекстHTML = ТекстHTML + "<hr><b>ИТОГ: " + Объект.ТекущийУзелДерева.Наименование + "</b>";
	КонецЕсли;
	
	ТекстHTML = ТекстHTML + "</div>";
	
	ФД = Новый ФорматированныйДокумент;
	ФД.УстановитьHTML(ТекстHTML, Новый Структура());
	
	ЭтотОбъект.ИсторияОтветов = ФД;
	
КонецПроцедуры

#КонецОбласти