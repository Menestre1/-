#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ДеревоРазделовПриАктивизацииСтроки(Элемент)
	
	// Убираем всю логику проверки с клиента.
	// Просто передаем управление на сервер.
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиКВопросуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестПриИзменении(Элемент)
	
	ЗаполнитьДеревоЗначений();
	
	// После заполнения разворачиваем все узлы верхнего уровня
	ЭлементыДереваУровень0 = ДеревоРазделов.ПолучитьЭлементы();
	Для Каждого ТекущийЭлементУровень1 Из ЭлементыДереваУровень0 Цикл
		Элементы.ДеревоРазделов.Развернуть(ТекущийЭлементУровень1.ПолучитьИдентификатор());
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоЗначений()
	
	ДеревоРазделов.ПолучитьЭлементы().Очистить();
	
	Если НЕ ЗначениеЗаполнено(Тест) Тогда
		Сообщить("Документ для проверки не выбран!");
		Возврат;
	КонецЕсли;

	// Определяем тип теста, который мы открыли
	ТипТестирования = Тест.ТипТестирования;

	// --- НОВАЯ ЛОГИКА: Выбираем, как заполнять дерево, в зависимости от типа теста ---
	Если ТипТестирования = Перечисления.ТипыТестирования.БинарноеДерево Тогда
		// ==========================================================
		// === СЦЕНАРИЙ 1: Открыт БИНАРНЫЙ ТЕСТ ===
		// ==========================================================
		ЗаполнитьДеревоДляБинарногоТеста();
		
	Иначе
		// ==========================================================
		// === СЦЕНАРИЙ 2: Открыт ПЛОСКИЙ ТЕСТ (старая логика) ===
		// ==========================================================
		ЗаполнитьДеревоДляПлоскогоТеста();
		
	КонецЕсли;
	
КонецПроцедуры


// НОВАЯ ПРОЦЕДУРА для заполнения по бинарному тесту
&НаСервере
Процедура ЗаполнитьДеревоДляБинарногоТеста()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ответы.НомерШага КАК НомерШага,
	|	Ответы.Вопрос.ТекстФормулировки КАК Вопрос,
	|	Ответы.ТипОтветаБинарный КАК Ответ
	|ИЗ
	|	Документ.ТестБинарноеДерево.ОтветыБинарногоДерева КАК Ответы
	|ГДЕ
	|	Ответы.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО // <-- ВОТ РЕШЕНИЕ
	|	Ответы.НомерШага";
	
	Запрос.УстановитьПараметр("Ссылка", Тест);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Сообщить("В этом бинарном тесте еще нет пройденных шагов.");
		Возврат;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	
	// Просто выводим плоский список шагов
	ЭлементыДерева = ДеревоРазделов.ПолучитьЭлементы();
	Пока Выборка.Следующий() Цикл
		НовыйЭлементДерева = ЭлементыДерева.Добавить();
		
		ОтветСтрокой = ?(Выборка.Ответ = Перечисления.ТипыОтветовБинарногоДерева.Да, "-> Да", "-> Нет");
		
		НовыйЭлементДерева.Формулировка = Строка(Выборка.НомерШага) + ". " + Выборка.Вопрос + " " + ОтветСтрокой;
		НовыйЭлементДерева.КодКартинки = 2; // Иконка вопроса
	КонецЦикла;

	// Добавляем финальный результат
	Если Тест.Завершен Тогда
		ФинальныйУзел = ЭлементыДерева.Добавить();
		ФинальныйУзел.Формулировка = "ИТОГ: " + Тест.ТекущийУзелДерева.Наименование;
		ФинальныйУзел.КодКартинки = 0; // Иконка раздела/результата
	КонецЕсли;

	// Для бинарного теста скрываем элементы ручной оценки
	Элементы.Правильность.Доступность = Ложь; 
	Элементы.Оценить.Доступность = Ложь;
	Ответ = "";

КонецПроцедуры

// СТАРАЯ ЛОГИКА, вынесенная в отдельную процедуру
&НаСервере
Процедура ЗаполнитьДеревоДляПлоскогоТеста()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	  "ВЫБРАТЬ
	  |	ТестВопросы.Вопрос,
	  |	ТестВопросы.Вопрос.ТекстФормулировки,
	  |	ТестВопросы.Раздел КАК Раздел,
	  |	ТестВопросы.Раздел.НаименованиеПолное КАК РазделНаименованиеПолное,
	  |	ТестВопросы.ОтветПолучен КАК ОтветПолучен,
	  |	ТестВопросы.Правильность,
	  |	ТестВопросы.Проверен КАК Проверен,
	  |	ТестВопросы.ИдентификаторСтроки
	  |ИЗ
	  |	Документ.ТестБинарноеДерево.ВопросыБинарногоДерева КАК ТестВопросы
	  |ГДЕ
	  |	ТестВопросы.ССЫЛКА = &Ссылка
	  |	И ТестВопросы.Вопрос.ТипОтвета = &ТипОтвета
	  |
	  |УПОРЯДОЧИТЬ ПО
	  |	ТестВопросы.НомерСтроки
	  |ИТОГИ
	  |	МИНИМУМ(ОтветПолучен),
	  |	МИНИМУМ(Проверен)
	  |ПО
	  |	Раздел";
	Запрос.УстановитьПараметр("Ссылка", Тест);
	Запрос.УстановитьПараметр("ТипОтвета", Перечисления.ТипыОтветовНаВопрос.Текст);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Для этого теста не найдено вопросов с открытым ответом для проверки.");
		Возврат;
	КонецЕсли;
	
	ВыборкаУровень0 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЭлементыДерева = ДеревоРазделов.ПолучитьЭлементы();
	
	Пока ВыборкаУровень0.Следующий() Цикл
		Родитель = ЭлементыДерева.Добавить();
		Родитель.Формулировка	= ВыборкаУровень0.РазделНаименованиеПолное;
		Родитель.Ссылка			= ВыборкаУровень0.Раздел;
		Родитель.КодКартинки	= 0;
		Родитель.Проверен		= ВыборкаУровень0.Проверен;
		Родитель.ОтветДан		= ВыборкаУровень0.ОтветПолучен;
		
		КоличествоОтветов = 0;
		Правильность 	= 0;
		
		ЭлементыДереваРодителя = Родитель.ПолучитьЭлементы();
		ВыборкаУровень1 = ВыборкаУровень0.Выбрать();
		Пока ВыборкаУровень1.Следующий() Цикл
			
			Если ВыборкаУровень1.Проверен Тогда 
				КоличествоОтветов = КоличествоОтветов + 1;
				Правильность = Правильность + ВыборкаУровень1.Правильность;
			КонецЕсли;
			
			НовыйЭлементДерева = ЭлементыДереваРодителя.Добавить();
			НовыйЭлементДерева.Формулировка	= ВыборкаУровень1.ВопросТекстФормулировки;
			НовыйЭлементДерева.Ссылка		= ВыборкаУровень1.Вопрос;
			НовыйЭлементДерева.КодКартинки	= 2;
			НовыйЭлементДерева.ОтветДан		= ВыборкаУровень1.ОтветПолучен;
			НовыйЭлементДерева.Правильность	= ВыборкаУровень1.Правильность;
			НовыйЭлементДерева.Проверен		= ВыборкаУровень1.Проверен;
			НовыйЭлементДерева.ИдентификаторСтроки = ВыборкаУровень1.ИдентификаторСтроки;
		КонецЦикла;	
		
		Родитель.Правильность = ?(КоличествоОтветов = 0, 0, Правильность / КоличествоОтветов);
	
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПерейтиКВопросуНаСервере()
	
	// --- НОВАЯ ПРОВЕРКА НА СЕРВЕРЕ ---
	// Если мы работаем с бинарным тестом, то активация строки не должна ничего делать.
	// Просто выходим из процедуры.
	Если ЗначениеЗаполнено(Тест) И Тест.ТипТестирования = Перечисления.ТипыТестирования.БинарноеДерево Тогда
		Возврат;
	КонецЕсли;
	// --- КОНЕЦ ПРОВЕРКИ ---

	ТекущиеДанныеДеревоРазделов = ДеревоРазделов.НайтиПоИдентификатору(Элементы.ДеревоРазделов.ТекущаяСтрока);
	Если ТекущиеДанныеДеревоРазделов = Неопределено Тогда
		Возврат;
	КонецЕсли;

	// ... остальной код процедуры остается без изменений ...
	Если ТипЗнч(ТекущиеДанныеДеревоРазделов.Ссылка) = Тип("ПланВидовХарактеристикСсылка.ВопросыДляТестирования") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТестОтветыНаВопросы.ОткрытыйОтвет,
			|	ТестОтветыНаВопросы.Ответ
			|ИЗ
			|	Документ.ТестБинарноеДерево.ОтветыБинарногоДерева КАК ТестОтветыНаВопросы
			|ГДЕ
			|	ТестОтветыНаВопросы.Ссылка = &Ссылка
			|	И ТестОтветыНаВопросы.ИдентификаторСтроки = &ИдентификаторСтроки";
		Запрос.УстановитьПараметр("ИдентификаторСтроки", ТекущиеДанныеДеревоРазделов.ИдентификаторСтроки);
		Запрос.УстановитьПараметр("Ссылка", Тест);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда 
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			ВыборкаДетальныеЗаписи.Следующий();
			Ответ = ВыборкаДетальныеЗаписи.ОткрытыйОтвет;
		КонецЕсли;

		Правильность = ТекущиеДанныеДеревоРазделов.Правильность; 
		Элементы.Правильность.Доступность = Истина; 
		Элементы.Оценить.Доступность = Истина; 
	Иначе
		Ответ = "";
		Правильность = 0; 
		Элементы.Правильность.Доступность = Ложь; 
		Элементы.Оценить.Доступность = Ложь; 
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОценитьНаСервере() 
	
	ТекущиеДанныеДеревоРазделов = ДеревоРазделов.НайтиПоИдентификатору(Элементы.ДеревоРазделов.ТекущаяСтрока);
	Если ТекущиеДанныеДеревоРазделов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОснованиеОбъект = Тест.ПолучитьОбъект();
	
	Попытка
		ОснованиеОбъект.Заблокировать();
		
		ИдентификаторСтроки = ТекущиеДанныеДеревоРазделов.ИдентификаторСтроки; 
		ПараметрыПоиска = Новый Структура();
		ПараметрыПоиска.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
		
		НайденныеСтроки = ОснованиеОбъект.ВопросыБинарногоДерева.НайтиСтроки(ПараметрыПоиска); 
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.Правильность = Правильность; 	
			Строка.Проверен = Истина; 	
		КонецЦикла; 
		
		ОснованиеОбъект.Записать();
		ОснованиеОбъект.Разблокировать();
		
		ЗаполнитьДеревоЗначений();
		
	Исключение
		ТекстСообщения = НСтр("ru = 'Не удалось добавить оценку в документ: %1.
			|Возможно, документ в настоящий момент редактируется.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Тест);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Оценить(Команда)
	
	ОценитьНаСервере();
	
	ЭлементыДереваУровень0 = ДеревоРазделов.ПолучитьЭлементы();
	Для Каждого ТекущийЭлементУровень1 Из ЭлементыДереваУровень0 Цикл
		Элементы.ДеревоРазделов.Развернуть(ТекущийЭлементУровень1.ПолучитьИдентификатор());
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДеревоЗначений();
	
	ЭлементыДереваУровень0 = ДеревоРазделов.ПолучитьЭлементы();
	Для Каждого ТекущийЭлементУровень1 Из ЭлементыДереваУровень0 Цикл
		Элементы.ДеревоРазделов.Развернуть(ТекущийЭлементУровень1.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти